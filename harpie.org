

* harpie

[[https://hackage.haskell.org/package/harpie][file:https://img.shields.io/hackage/v/harpie.svg
]][[https://github.com/tonyday567/harry/actions?query=workflow%3Ahaskell-ci][file:https://github.com/tonyday567/harpie/workflows/haskell-ci/badge.svg]]

* Development

#+begin_src haskell-ng :results output
:r
:set -Wno-name-shadowing
:set -Wno-type-defaults
:set -XDataKinds
import qualified Harpie.Shape as S
import qualified Harpie.Fixed as F
import qualified Harpie.Array as A
import Prettyprinter
import GHC.TypeNats
import Data.Vector qualified as V
#+end_src

#+RESULTS:
#+begin_example
Build profile: -w ghc-9.10.1 -O1
In order, the following will be built (use -v for more details):
 - harpie-0.1.0.1 (interactive) (lib) (first run)
Preprocessing library for harpie-0.1.0.1...
GHCi, version 9.10.1: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /Users/tonyday567/haskell/harpie/.ghci
[1 of 4] Compiling Harpie.Shape     ( src/Harpie/Shape.hs, interpreted )
[2 of 4] Compiling Harpie.Sort      ( src/Harpie/Sort.hs, interpreted )
[3 of 4] Compiling Harpie.Array     ( src/Harpie/Array.hs, interpreted )
[4 of 4] Compiling Harpie.Fixed     ( src/Harpie/Fixed.hs, interpreted )
Ok, four modules loaded.
Ok, four modules reloaded.
#+end_example

#+begin_src haskell-ng :results output
a = F.range @[2,3,4]
pretty a
#+end_src

#+RESULTS:
: [[[0,1,2,3],
:   [4,5,6,7],
:   [8,9,10,11]],
:  [[12,13,14,15],
:   [16,17,18,19],
:   [20,21,22,23]]]
